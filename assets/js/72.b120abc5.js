(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{1042:function(e,t,v){"use strict";v.r(t);var _=v(45),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"keys"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#keys"}},[e._v("#")]),e._v(" Keys")]),e._v(" "),v("ul",[v("li",[e._v("Keys preserve state when they move around the widget tree.")]),e._v(" "),v("li",[e._v("Most of the time you don't need keys.")]),e._v(" "),v("li",[e._v("But if you're moving around same type of widgets that hold some state, it's key time .")]),e._v(" "),v("li",[e._v("Example is a to do list.")]),e._v(" "),v("li",[e._v("Also, the news app from flutter boring show.")]),e._v(" "),v("li",[e._v("stateful하고 동일한 위젯이 여러개인 경우에 필요하다.")]),e._v(" "),v("li",[e._v("key는 유지하고")])]),e._v(" "),v("p",[v("strong",[e._v("작동방법")])]),e._v(" "),v("ul",[v("li",[v("p",[e._v("모든 위젯에 맞춰 플러터는 element를 만든다.")])]),e._v(" "),v("li",[v("p",[e._v("element tree에는 위젯의 타입과 children에 대한 정보만 담긴다. 즉, 구조에 대한 정")]),e._v(" "),v("p",[e._v("valuekey, objectkey, uniquekey 로 종류가 나뉜다.")]),e._v(" "),v("p",[e._v("단순히 필드만으로 unique해질것같으면 그 필드에 value쳐서 밸류키 쓴다.")]),e._v(" "),v("p",[e._v("필드 여러개 조합해야되면 objectkey,")]),e._v(" "),v("p",[e._v("그것도 안되겟으면 uniquekey로 한다.")]),e._v(" "),v("p",[e._v("쓰지않아야하는건 randomnumber. rebuild할때마다 키값이 바뀌어서 의미가 없다.")]),e._v(" "),v("p",[e._v("PageStorageKey는 특별한 키로 페이지 위치를 기억해준다.")]),e._v(" "),v("p",[e._v("GlobalKey는 widget이 state를 잃지 않고 parent를 바꾸던가 다른 위젯트리에서 위젯에 대한 정보를 얻을때 쓸 수 있다. 그렇지만 이거보다는 provider, bloc, redux가 나을 가능성이 크다.")]),e._v(" "),v("p",[e._v("보만 갖는다.")])]),e._v(" "),v("li",[v("p",[e._v("key가 있으면 key까지 추가로 체크해준다 .")])])])])}),[],!1,null,null,null);t.default=l.exports}}]);